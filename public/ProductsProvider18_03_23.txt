import { Add, Countertops, Remove } from '@mui/icons-material'
import React, { useEffect, useState } from 'react'
import Annoucement from '../components/Annoucement'
import Footer from '../components/Footer'
import Navbar from '../components/Navbar'
import Newsletter from '../components/Newsletter'
import { Link, useParams, useNavigate } from 'react-router-dom'
import { useCart } from '../context/CartProvider' 
import ThreeDots from './ThreeDots'
import{useLoggedIn} from '../context/LoggedProvider';

const ProductsPage = ({data}) => {

    const [counter, setCounter] = useState(0);
    const [Selected, setSelected] = useState("");
    const { select } = useParams(); //selected item
    const { type } = useParams(); //id of the item
    
    const curr = data.filter((item) => item.title === type);
    const currItem = curr.find((item2) => { 
        if(String(item2.id) === String(select)) {
            console.log(item2.id, typeof item2.id);
            return item2;
        }
    });
    

  
  // Or, initialize the object with a default value before accessing its properties
  let myDefaultObject = {};
  console.log(myDefaultObject.count); // Returns "undefined"
  
    // let {cart, setCart} = useCart();
    const navigate = useNavigate();
    
    let { user } = useLoggedIn();

    let userEmail = 'default';

    try {
        // Check type of user
        if(typeof user !== 'string') {
            user = JSON.stringify(user);
        }

        if(user.length > 0) {
          const regex = /"email":"([^"]+)"/;
          const matchEmail = user.match(regex);
          userEmail = matchEmail[1];

        }
    }
    catch{
    // pass
    }

    
    let cart = '';

    if(userEmail === 'default') {
        if(localStorage.getItem(`cart-${userEmail}`))
        cart = localStorage.getItem(`cart-${userEmail}`);
    }
    else{
        if(localStorage.getItem(`cart-${userEmail}`))
            cart = localStorage.getItem(`cart-${userEmail}`); //משווים לקארט
    }
    
    cart = JSON.parse(cart);

    function add()
    {
        setCounter(counter+1)
    }

    function minus()
    {
        if(counter!==0)
        {
            setCounter(counter-1)
        }
        else
        {
            setCounter(counter)
        }
    }

    function handleAddToCart(e) {
        e.preventDefault();
       
        // console.table(currItem, cart);
        
  if (!Array.isArray(cart)) {
    cart = [];
  }
        let fuoundIndex = cart.findIndex((item)=> item.id === currItem.id);
        

        if(fuoundIndex !== (-1)){
           cart[fuoundIndex].count++;
        }
        else
        {
            let newItem = {...currItem};
            newItem.count = counter;
            newItem.select = Selected;

            
            cart.push(newItem);
            console.log(cart);
        
        }
        
        // If user logged in add to his cart if not add to default
        if(user.length > 0) {
            // Remove the old cart from local storage
            localStorage.removeItem(`cart-${userEmail}`)


            // Create the updated cart
            localStorage.setItem(`cart-${userEmail}`, JSON.stringify(cart));
        }
        else {
            // Remove the old cart from local storage
            localStorage.removeItem(`cart-default`);

            // Create the updated cart
            localStorage.setItem(`cart-default`, JSON.stringify(cart));
        }
        console.log(cart, userEmail)

        
        navigate('/Cart');
    }

    if(!currItem) {
        console.log('hi')
        return ( <ThreeDots/>)
    }

    
    
    
    return (
        <>
            <div className="productCon">
                <Navbar/>
                <br/>
                <Annoucement/>
                <div className="ReturnCon">
                <Link className='btn btn-primary' to={"/"}> return</Link>
            </div>
                <div className="wrapper">
                    <div className="ImgContainer">
                        <img className='Image' src={currItem.img} alt="" />
                    </div>
                        <div className="InfoContainer">
                            <h1 className='TitleCon'> {currItem.title}</h1>
                            <p className='descCon'> {currItem.description}</p>
                            <span className='PriceCon'>{currItem.price}$</span>

                            <div className="FilterContainer">
                            
                                <div className="Filter">

                                <span className="FiltetTitle">Size</span>
                                <select  className="FilterSize" onChange={e => setSelected(e.target.value)}>
                                    <option disabled selected value="">select size</option>
                                    <option className='FilterSizeOption' value="XS">XS</option>
                                    <option className='FilterSizeOption' value="S">S</option>
                                    <option className='FilterSizeOption'value="M">M</option>
                                    <option className='FilterSizeOption'value="L">L</option>  
                                    <option className='FilterSizeOption'value="XL">XL</option>                
                                </select> 
                                </div>
                            </div>
                            <div className="AddContainer">
                                <div className="AmountContainer">
                                    <Remove  className='icon' onClick={() =>minus()}/>
                                    <span className='Amount'>{counter}</span>
                                    <Add className='icon' onClick={() => add()}/>
                                </div>
                                <button className='ProductButton' onClick={(e) => {handleAddToCart(e)}}>Add To Cart</button>
                            </div>
                        </div>
                    </div>  
                <Newsletter/>
                <Footer/>
            </div>
        </>
)}

export default ProductsPage
